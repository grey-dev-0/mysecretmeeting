(function(){Vue.component("peer",{name:"Peer",template:"#peer",props:{id:{type:Number,required:true},local:{type:Boolean,required:true},createdAt:{type:Number,default:0}},data:function(){return{stream:null,error:null,connection:null,host:hostPeer}},mounted:function(){this.$nextTick(function(){if(this.local)this.initLocalStream();else this.initRemotePeer()})},methods:{initLocalStream:function(){var n=this;navigator.mediaDevices.getUserMedia({video:true,audio:true}).then(function(e){n.stream=e;n.$root.localStream=n.stream;n.$nextTick(function(){$("#"+n.id).find("video")[0].srcObject=n.stream;n.$root.setLocalPeerReady()})}).catch(function(e){n.error=e})},initRemoteStream:function(){var t=this;if(!this.sendLocalStream())var e=setInterval(function(){if(t.sendLocalStream())clearInterval(e)},100);this.stream=new MediaStream;this.connection.addEventListener("track",function(e){var n=$("#"+t.id).find("video")[0];t.stream.addTrack(e.track);if(!n.srcObject)n.srcObject=t.stream;console.log("Remote Track Added",e.track)})},sendLocalStream:function(){var n=this;if(this.$root.localStream!=null){this.$root.localStream.getTracks().forEach(function(e){n.connection.addTrack(e);console.log("Local Track Added",e)});return true}else return false},initRemotePeer:function(){this.connection=new RTCPeerConnection({iceServers:this.$root.iceServers});this.initRemoteStream();this.addIceListeners();if(this.createdAt>this.$root.createdAt){var n=this;this.connection.createOffer().then(function(e){return n.connection.setLocalDescription(e)}).then(function(){n.$root.signalingChannel.send(JSON.stringify({action:"offer",id:n.id,offer:n.connection.localDescription}))})}},addIceListeners:function(){var n=this;this.connection.addEventListener("icecandidate",function(e){if(e.candidate)n.$root.signalingChannel.send(JSON.stringify({action:"candidate",id:n.id,candidate:e.candidate}))});this.connection.addEventListener("icecandidateerror",function(e){console.error("ICE error:",e)})},handleOffer:function(e,n){var t=this;this.connection.setRemoteDescription(new RTCSessionDescription(e)).then(function(){return t.connection.createAnswer()}).then(function(e){return t.connection.setLocalDescription(e)}).then(function(){t.$root.signalingChannel.send(JSON.stringify({action:"answer",id:n,answer:t.connection.localDescription}))})},handleAnswer:function(e){if(!this.connection.remoteDescription)this.connection.setRemoteDescription(new RTCSessionDescription(e))},handleCandidate:function(e){this.connection.addIceCandidate(new RTCIceCandidate(e)).catch(function(e){console.error("Could not add received ICE candidate",e)})}}})})();